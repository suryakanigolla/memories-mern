{"version":3,"sources":["reducers/posts.js","reducers/auth.js","reducers/index.js","store/index.js","layouts/ProtectedRoute.js","assets/images/google-icon.svg","api/index.js","components/Toast.js","pages/index.js","actions/authActions.js","pages/signup.js","assets/images/person-light.svg","components/Header.js","layouts/MainLayout.js","actions/postsActions.js","components/Tag.js","components/Post.js","components/SkeletonPost.js","components/Pagination.js","utils/index.js","components/ImageDropZone.js","components/FormMain.js","pages/home.js","App.js","index.js"],"names":["initialPostsState","posts","isFetching","isCreatingPost","isUpdatingPost","state","action","type","payload","map","post","_id","filter","initialAuthState","userData","token","auth","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","store","createStore","reducers","compose","applyMiddleware","thunk","persistor","persistStore","ProtectedRoute","props","useSelector","Component","component","rest","render","to","axiosInstance","axios","create","baseURL","interceptors","request","use","req","getState","console","log","headers","Authorization","response","res","error","status","dispatch","updatePost","id","updatedPost","patch","deletePost","delete","likePost","isLiked","login","loginData","register","registerData","TYPE_SUCCESS","TYPE_ERROR","toastMessage","message","toastConfig","autoClose","closeOnClick","draggable","hideProgressBar","position","progress","undefined","toast","success","Toast","newestOnTop","rtl","initialState","email","password","rememberMe","initialFormInvalid","IndexPage","React","useState","formData","setFormData","formInValidity","setFormInValidity","history","useHistory","useDispatch","handleSubmit","length","prev","a","api","loginResponse","data","push","handleGoogleSuccess","profileObj","tokenId","className","Form","Group","controlId","Label","Control","value","onChange","e","target","isInvalid","onClick","Button","variant","clientId","onSuccess","onFailure","handleGoogleFailure","cookiePolicy","renderProps","disabled","width","src","googleIcon","alt","passwordConfirm","firstName","lastName","SignUpPage","registerResponse","Row","Col","ButtonGroup","Header","handleLogout","Navbar","bg","expand","Container","Brand","as","href","Toggle","Collapse","Nav","Dropdown","Image","PersonLightIcon","Menu","onLogoutSuccess","Item","MainLayout","children","handleError","Tag","x","y","number","style","top","left","CustomToggle","forwardRef","ref","preventDefault","Post","title","desc","isPostLiked","image","creator","containerClass","setCurrentId","tags","isOpen","setIsOpen","setIsLiked","handleDelete","handleLike","tempIsLiked","likePostResponse","backgroundSize","backgroundImage","backgroundPosition","align","eventKey","point","index","SkeletonPost","count","Pagination","pageLimit","dataLimit","Math","ceil","pages","setPages","currentPage","setCurrentPage","useEffect","Fragment","Prev","page","start","floor","Array","fill","_","idx","paginationGroup","active","Next","startIndex","endIndex","slice","sliceData","selectedFile","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","ImageDropZone","currentPost","setImage","points","setPoints","fileUploadRef","useRef","onDrop","useCallback","acceptedFiles","forEach","tempBase64","useDropzone","getRootProps","getInputProps","isDragActive","accept","rect","getBoundingClientRect","clientX","clientY","pointsTemp","handleAddTag","current","click","initialFormState","initialFormInValid","FormMain","currentForm","setCurrentForm","postData","createPostResponse","clear","handleUpdate","setTimeout","Text","resize","rows","Spinner","animation","size","HomePage","currentId","find","get","postsResponse","App","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4ba38727.chunk.js","sourcesContent":["const initialPostsState = {\r\n  posts: [],\r\n  isFetching: false,\r\n  isCreatingPost: false,\r\n  isUpdatingPost: false,\r\n};\r\n\r\nconst posts = (state = initialPostsState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_FETCH_LOADING\":\r\n      return {\r\n        ...state,\r\n        isFetching: !state.isFetching,\r\n      };\r\n    case \"TOGGLE_CREATE_POST_LOADING\":\r\n      return {\r\n        ...state,\r\n        isCreatingPost: !state.isCreatingPost,\r\n      };\r\n    case \"TOGGLE_UPDATE_POST_LOADING\":\r\n      return {\r\n        ...state,\r\n        isUpdatingPost: !state.isUpdatingPost,\r\n      };\r\n    case \"FETCH_POSTS\":\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case \"CREATE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n    case \"UPDATE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case \"DELETE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default posts;\r\n","const initialAuthState = {\r\n  userData: null,\r\n  token: null,\r\n};\r\n\r\nconst auth = (state = initialAuthState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH\":\r\n\r\n      return {\r\n        ...state,\r\n        userData: action.payload.userData,\r\n        token: action.payload.token,\r\n      };\r\n    case \"LOGOUT\":\r\n      return initialAuthState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"posts\", \"auth\"],\r\n};\r\n\r\nconst rootReducer =  combineReducers({\r\n  posts,\r\n  auth,\r\n});\r\n\r\n\r\nexport default persistReducer(persistConfig,rootReducer)","import { compose, applyMiddleware, createStore } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\n\r\n\r\nexport const store = createStore(reducers, compose(applyMiddleware(thunk)));\r\nexport const persistor = persistStore(store);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRoute = (props) => {\r\n  const userData = useSelector((state) => state.auth.userData);\r\n  const { component: Component, ...rest } = props;\r\n\r\n  if (userData) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  }\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export default __webpack_public_path__ + \"static/media/google-icon.a45b46e9.svg\";","import axios from \"axios\";\r\nimport { store } from \"../store\";\r\n\r\nconst axiosInstance = axios.create({ baseURL: \"http://localhost:5000\" });\r\n\r\nconst select = (state) => {\r\n  return state.auth.token;\r\n};\r\n\r\naxiosInstance.interceptors.request.use((req) => {\r\n  const token = select(store.getState());\r\n  console.log(token);\r\n\r\n  if (token) {\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  (error) => {\r\n    if (error.status === 401) {\r\n      store.dispatch({ type: \"LOGOUT\" });\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchPosts = () => axiosInstance.get(\"/posts\");\r\nexport const createPost = (postData) => axiosInstance.post(\"/posts\", postData);\r\nexport const updatePost = (id, updatedPost) =>\r\n  axiosInstance.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => axiosInstance.delete(`/posts/${id}`);\r\nexport const likePost = (id, isLiked) =>\r\n  axiosInstance.patch(`/posts/${id}/like`, { isLiked });\r\n\r\nexport const login = (loginData) =>\r\n  axiosInstance.post(\"/auth/login\", loginData);\r\nexport const register = (registerData) =>\r\n  axiosInstance.post(\"/auth/register\", registerData);\r\n","import React from \"react\"\r\nimport { toast, ToastContainer } from \"react-toastify\"\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport \"./Toast.scss\"\r\n\r\nexport const TYPE_SUCCESS = \"success\"\r\nexport const TYPE_ERROR = \"error\"\r\n\r\nconst Toast = () => {\r\n  return (\r\n    <ToastContainer\r\n      position=\"bottom-center\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport const toastMessage = (message, type) => {\r\n  const toastConfig = {\r\n    autoClose: 5000,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    hideProgressBar: false,\r\n    position: \"bottom-center\",\r\n    progress: undefined,\r\n  }\r\n  if (type === TYPE_ERROR) {\r\n    toast.error(message, toastConfig)\r\n  } else if (type === TYPE_SUCCESS) {\r\n    toast.success(message, toastConfig)\r\n  }\r\n}\r\n\r\nexport default Toast\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nimport googleIcon from \"../assets/images/google-icon.svg\";\r\nimport { login } from \"../actions/authActions\";\r\nimport { toastMessage, TYPE_SUCCESS, TYPE_ERROR } from \"../components/Toast\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  rememberMe: false,\r\n};\r\n\r\nconst initialFormInvalid = {\r\n  email: false,\r\n  password: false,\r\n};\r\n\r\nconst IndexPage = () => {\r\n  const [formData, setFormData] = React.useState(initialState);\r\n  const [formInValidity, setFormInValidity] =\r\n    React.useState(initialFormInvalid);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    if (!formData.email.length) {\r\n      setFormInValidity((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, email: false }));\r\n    }\r\n    if (!formData.password.length) {\r\n      setFormInValidity((prev) => ({ ...prev, password: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, password: false }));\r\n    }\r\n    if (!formInValidity.email && !formInValidity.password) {\r\n      dispatch(login(formData, history));\r\n    }\r\n  };\r\n\r\n  const handleGoogleSuccess = async (res) => {\r\n    const userData = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    if (userData && token) {\r\n      dispatch({ type: \"AUTH\", payload: { userData, token } });\r\n      toastMessage(\"Login Successful\", TYPE_SUCCESS);\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  const handleGoogleFailure = (error) => {\r\n    console.log(error);\r\n    toastMessage(error, TYPE_ERROR);\r\n  };\r\n\r\n  return (\r\n    <div className=\"index-page\">\r\n      <Form className=\"index-page-form\">\r\n        <h3 className=\"index-page-form__heading\">Login</h3>\r\n        <Form.Group\r\n          className=\"mb-3 index-page-form__group\"\r\n          controlId=\"formEmail\"\r\n        >\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={formData.email}\r\n            onChange={(e) =>\r\n              setFormData((prev) => ({ ...prev, email: e.target.value }))\r\n            }\r\n            isInvalid={formInValidity.email}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group\r\n          className=\"mb-3 index-page-form__group\"\r\n          controlId=\"formPassword\"\r\n        >\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) =>\r\n              setFormData((prev) => ({ ...prev, password: e.target.value }))\r\n            }\r\n            isInvalid={formInValidity.password}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group\r\n          className=\"mb-4 d-flex align-items-center justify-content-between\"\r\n          controlId=\"formRememberMe\"\r\n        >\r\n          {/* <div className=\"d-flex align-items-center\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              value={formData.rememberMe}\r\n              className=\"me-2\"\r\n              onChange={(e) =>\r\n                setFormData((prev) => ({\r\n                  ...prev,\r\n                  rememberMe: e.target.checked,\r\n                }))\r\n              }\r\n            />\r\n            <Form.Label className=\"mb-0 text-muted\">Remember Me?</Form.Label>\r\n          </div> */}\r\n          <span\r\n            className=\"text-bold bg-dark text-light p-1 px-2 cursor-pointer\"\r\n            onClick={() => {\r\n              history.push(\"/signup\");\r\n            }}\r\n          >\r\n            Sign Up\r\n          </span>\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"button\"\r\n          className=\"w-100 mb-2\"\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          Login\r\n        </Button>\r\n        <GoogleLogin\r\n          clientId=\"863171998753-cvajles56ogr9jqp93jrg0umk5rsk7oh.apps.googleusercontent.com\"\r\n          onSuccess={(res) => handleGoogleSuccess(res)}\r\n          onFailure={(error) => handleGoogleFailure(error)}\r\n          cookiePolicy=\"single_host_origin\"\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant=\"secondary\"\r\n              type=\"button\"\r\n              className=\"w-100 d-flex align-items-center justify-content-center\"\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              <img\r\n                width=\"18px\"\r\n                src={googleIcon}\r\n                alt=\"google-icon\"\r\n                className=\"mb-0 me-2\"\r\n              ></img>\r\n              Login\r\n            </Button>\r\n          )}\r\n        ></GoogleLogin>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n","import * as api from \"../api\";\r\nimport { toastMessage, TYPE_SUCCESS, TYPE_ERROR } from \"../components/Toast\";\r\n\r\nexport const login = (loginData, history) => async (dispatch) => {\r\n  try {\r\n    const loginResponse = await api.login(loginData);\r\n    if (loginResponse.status === 200) {\r\n      const data = loginResponse.data;\r\n      const token = data.token;\r\n      delete data.token;\r\n\r\n      dispatch({ type: \"AUTH\", payload: { userData: data, token } });\r\n      toastMessage(\"Login Successful\", TYPE_SUCCESS);\r\n\r\n      history.push(\"/home\");\r\n    }\r\n  } catch (error) {\r\n    let message = \"\";\r\n    if (error.response) {\r\n      message = error.response.data.message;\r\n    } else if (error.request) {\r\n      console.log(error.request);\r\n    } else {\r\n      console.log(\"Error\", error.message);\r\n    }\r\n    toastMessage(message.length ? message : \"Something went wrong\", TYPE_ERROR);\r\n  }\r\n};\r\nexport const register = (registerData, history) => async (dispatch) => {\r\n  try {\r\n    const registerResponse = await api.register(registerData);\r\n    if (registerResponse.status === 201) {\r\n      const data = registerResponse.data;\r\n      const token = data.token;\r\n      delete data.token;\r\n\r\n      dispatch({ type: \"AUTH\", payload: { userData: data, token } });\r\n      toastMessage(\"Registration Successful\", TYPE_SUCCESS);\r\n\r\n      history.push(\"/home\");\r\n    }\r\n  } catch (error) {\r\n    let message = \"\";\r\n    if (error.response) {\r\n      message = error.response.data.message;\r\n    } else if (error.request) {\r\n      console.log(error.request);\r\n    } else {\r\n      console.log(\"Error\", error.message);\r\n    }\r\n    toastMessage(message.length ? message : \"Something went wrong\", TYPE_ERROR);\r\n  }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: \"LOGOUT\" });\r\n  toastMessage(\"Log out Successful\", TYPE_SUCCESS);\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, ButtonGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/authActions\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirm: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n};\r\n\r\nconst initialFormInvalid = {\r\n  email: false,\r\n  password: false,\r\n  passwordConfirm: false,\r\n  firstName: false,\r\n  lastName: false,\r\n};\r\n\r\nconst SignUpPage = () => {\r\n  const [formData, setFormData] = React.useState(initialState);\r\n  const [formInValidity, setFormInValidity] =\r\n    React.useState(initialFormInvalid);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    if (!formData.email.length) {\r\n      setFormInValidity((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, email: false }));\r\n    }\r\n    if (!formData.password.length) {\r\n      setFormInValidity((prev) => ({ ...prev, password: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, password: false }));\r\n    }\r\n    if (!formData.passwordConfirm.length) {\r\n      setFormInValidity((prev) => ({ ...prev, passwordConfirm: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, passwordConfirm: false }));\r\n    }\r\n    if (!formData.firstName.length) {\r\n      setFormInValidity((prev) => ({ ...prev, firstName: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, firstName: false }));\r\n    }\r\n    if (!formData.lastName.length) {\r\n      setFormInValidity((prev) => ({ ...prev, lastName: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, lastName: false }));\r\n    }\r\n    if (\r\n      !formInValidity.email &&\r\n      !formInValidity.password &&\r\n      !formInValidity.passwordConfirm &&\r\n      !formInValidity.firstName &&\r\n      !formInValidity.lastName\r\n    ) {\r\n      dispatch(register(formData, history));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up-page\">\r\n      <Form className=\"sign-up-page-form\">\r\n        <h3 className=\"sign-up-page-form__heading\">Sign Up</h3>\r\n        <Form.Group\r\n          className=\"mb-3 sign-up-page-form__group\"\r\n          controlId=\"formNames\"\r\n        >\r\n          <Row>\r\n            <Col>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={formData.firstName}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    firstName: e.target.value,\r\n                  }))\r\n                }\r\n                isInvalid={formInValidity.firstName}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={formData.lastName}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({ ...prev, lastName: e.target.value }))\r\n                }\r\n                isInvalid={formInValidity.lastName}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n        <Form.Group\r\n          className=\"mb-3 sign-up-page-form__group\"\r\n          controlId=\"formEmail\"\r\n        >\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={formData.email}\r\n            onChange={(e) =>\r\n              setFormData((prev) => ({ ...prev, email: e.target.value }))\r\n            }\r\n            isInvalid={formInValidity.email}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group\r\n          className=\"mb-3 sign-up-page-form__group\"\r\n          controlId=\"formPassword\"\r\n        >\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) =>\r\n              setFormData((prev) => ({ ...prev, password: e.target.value }))\r\n            }\r\n            isInvalid={formInValidity.password}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group\r\n          className=\"mb-3 sign-up-page-form__group\"\r\n          controlId=\"formPasswordConfirm\"\r\n        >\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={formData.passwordConfirm}\r\n            onChange={(e) =>\r\n              setFormData((prev) => ({\r\n                ...prev,\r\n                passwordConfirm: e.target.value,\r\n              }))\r\n            }\r\n            isInvalid={formInValidity.passwordConfirm}\r\n          />\r\n        </Form.Group>\r\n        <ButtonGroup>\r\n          <Button\r\n            variant=\"secondary\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            onClick={() => handleSubmit()}\r\n          >\r\n            Register\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","export default __webpack_public_path__ + \"static/media/person-light.e9477226.svg\";","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\nimport { Navbar, Nav, Container, Dropdown, Image } from \"react-bootstrap\";\r\n\r\nimport { logout } from \"../actions/authActions\";\r\n\r\nimport PersonLightIcon from \"../assets/images/person-light.svg\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\" id=\"site-navbar\">\r\n      <Container className=\"ps-2\">\r\n        <Navbar.Brand as=\"a\" href=\"/home\">\r\n          Memories\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                variant=\"dark\"\r\n                id=\"dropdown-basic\"\r\n                className=\"shadow-non\"\r\n              >\r\n                <Image src={PersonLightIcon} className=\"mb-0\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {/* <Dropdown.Item href=\"#/action-1\">Profile</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Settings</Dropdown.Item> */}\r\n                <GoogleLogout\r\n                  clientId=\"863171998753-cvajles56ogr9jqp93jrg0umk5rsk7oh.apps.googleusercontent.com\"\r\n                  onLogoutSuccess={() => handleLogout()}\r\n                  render={(renderProps) => (\r\n                    <Dropdown.Item\r\n                      onClick={renderProps.onClick}\r\n                      disabled={renderProps.disabled}\r\n                    >\r\n                      Logout\r\n                    </Dropdown.Item>\r\n                  )}\r\n                ></GoogleLogout>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst MainLayout = ({ children }) => {\r\n  return (\r\n    <div className=\"main-layout\">\r\n      <div className=\"main-layout__header\">\r\n        <Header></Header>\r\n      </div>\r\n      <div className=\"main-layout__body container\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout","import * as api from \"../api\";\r\nimport { toastMessage, TYPE_SUCCESS, TYPE_ERROR } from \"../components/Toast\";\r\n\r\nconst handleError = (error) => {\r\n  let message = \"\";\r\n  if (error.response) {\r\n    message = error.response.data.message;\r\n  } else if (error.request) {\r\n    console.log(error.request);\r\n  } else {\r\n    console.log(\"Error\", error.message);\r\n  }\r\n  toastMessage(message.length ? message : \"Something went wrong\", TYPE_ERROR);\r\n};\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"TOGGLE_FETCH_LOADING\" });\r\n    const postsResponse = await api.fetchPosts();\r\n    const data = postsResponse.data;\r\n    dispatch({ type: \"FETCH_POSTS\", payload: data });\r\n  } catch (error) {\r\n    handleError(error);\r\n  } finally {\r\n    dispatch({ type: \"TOGGLE_FETCH_LOADING\" });\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"TOGGLE_CREATE_POST_LOADING\" });\r\n    const createPostResponse = await api.createPost(post);\r\n    const data = createPostResponse.data;\r\n    dispatch({ type: \"CREATE_POST\", payload: data });\r\n    toastMessage(\"Post created!\", TYPE_SUCCESS);\r\n  } catch (error) {\r\n    handleError(error);\r\n  } finally {\r\n    dispatch({ type: \"TOGGLE_CREATE_POST_LOADING\" });\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"TOGGLE_UPDATE_POST_LOADING\" });\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: \"UPDATE_POST\", payload: data });\r\n    toastMessage(\"Post details have been updated\", TYPE_SUCCESS);\r\n  } catch (error) {\r\n    handleError(error);\r\n  } finally {\r\n    dispatch({ type: \"TOGGLE_UPDATE_POST_LOADING\" });\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: \"DELETE_POST\", payload: id });\r\n    toastMessage(\"Post deleted\", TYPE_SUCCESS);\r\n  } catch (error) {\r\n    handleError(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id, isLiked) => async (dispatch) => {\r\n  try {\r\n    const likePostResponse = await api.likePost(id, isLiked);\r\n    const data = likePostResponse.data;\r\n    dispatch({ type: \"UPDATE_POST\", payload: data });\r\n  } catch (error) {\r\n    handleError(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst Tag = ({ x, y, number }) => {\r\n  return (\r\n    <div style={{ top: y, left: x }} className=\"pin\">\r\n      <span>{number}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { deletePost, likePost } from \"../actions/postsActions\";\r\n\r\nimport Tag from \"./Tag\";\r\n\r\nimport \"./Post.scss\";\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <div\r\n    className=\"post__header__edit\"\r\n    ref={ref}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    {children}\r\n  </div>\r\n));\r\n\r\nconst Post = ({\r\n  title,\r\n  desc,\r\n  isPostLiked,\r\n  image,\r\n  creator,\r\n  containerClass,\r\n  id,\r\n  setCurrentId,\r\n  tags,\r\n}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isLiked, setIsLiked] = React.useState(isPostLiked);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(id));\r\n    setCurrentId(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setCurrentId(id);\r\n  };\r\n\r\n  const handleLike = () => {\r\n    const tempIsLiked = isLiked;\r\n    setIsLiked((prev) => !prev);\r\n    dispatch(likePost(id, !tempIsLiked));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"post\"\r\n      className={`post ${containerClass || \"\"} ${isOpen && \"open\"}`}\r\n    >\r\n      <div\r\n        className=\"post__header\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(${image})`,\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      >\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            as={CustomToggle}\r\n            id=\"dropdown-custom-components\"\r\n          ></Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu align=\"start\">\r\n            <Dropdown.Item eventKey=\"1\" onClick={() => handleEdit()}>\r\n              Edit\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"2\" onClick={() => handleDelete()}>\r\n              Delete\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        {isOpen && tags.map((point, index) => (\r\n          <Tag key={index} x={point.x} y={point.y} number={index + 1} />\r\n        ))}\r\n        <div\r\n          id=\"post_button\"\r\n          className=\"post_open_button\"\r\n          onClick={() => setIsOpen((prev) => !prev)}\r\n        >\r\n          <span className=\"left\"></span>\r\n          <span className=\"right\"></span>\r\n        </div>\r\n      </div>\r\n      <div className=\"post__body p-3\">\r\n        <h4 className=\"mb-1\">{title}</h4>\r\n        <h5 className=\"text-muted mb-3\">{creator}</h5>\r\n        <p className=\"mb-0 pe-2\">{desc}</p>\r\n      </div>\r\n      <div className=\"post__footer\">\r\n        <div className=\"post__footer__like d-flex align-items-center\">\r\n          <button\r\n            className={`post__footer__like__button ${isLiked && \"liked\"}`}\r\n            onClick={() => handleLike()}\r\n          >\r\n            <span className=\"like-icon\">\r\n              <div className=\"heart-animation-1\"></div>\r\n              <div className=\"heart-animation-2\"></div>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nimport \"./SkeletonPost.scss\"\r\n\r\nconst SkeletonPost = () => {\r\n  return (\r\n    <div className=\"skeleton-post\">\r\n      <div\r\n        className=\"skeleton-post__header\"\r\n      ></div>\r\n      <div className=\"skeleton-post__body p-3\">\r\n        <h4 className=\"mb-1\">\r\n          <Skeleton />\r\n        </h4>\r\n        <h5 className=\"mb-3\">\r\n          <Skeleton />\r\n        </h5>\r\n        <p className=\"mb-0 pe-2\">\r\n          <Skeleton count={5} />\r\n        </p>\r\n      </div>\r\n      <div className=\"skeleton-post__footer px-3 pb-1\">\r\n        <div className=\"d-flex align-items-center justify-content-end\">\r\n          <span  style={{width: \"30px\"}}>\r\n            <Skeleton />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkeletonPost;\r\n","import React from \"react\";\r\nimport { Pagination as PaginationGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Post from \"./Post\";\r\nimport SkeletonPost from \"./SkeletonPost\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nconst Pagination = ({ data, pageLimit, dataLimit, setCurrentId }) => {\r\n  const [pages, setPages] = React.useState(Math.ceil(data.length / dataLimit));\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  const isFetching = useSelector((state) => state.posts.isFetching);\r\n\r\n  React.useEffect(() => {\r\n    setPages(Math.ceil(data.length / dataLimit));\r\n    if (currentPage > pages && currentPage !== 1) {\r\n      setCurrentPage((prev) => prev - 1);\r\n    }\r\n  }, [data, dataLimit, currentPage, pages]);\r\n\r\n  const goNext = () => {\r\n    setCurrentPage((page) => page + 1);\r\n  };\r\n\r\n  const goBack = () => {\r\n    setCurrentPage((page) => page - 1);\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const sliceData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const paginationGroup = () => {\r\n    if (pages > pageLimit) {\r\n      const start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n      return new Array(pageLimit).fill().map((_, index) => start + index + 1);\r\n    }\r\n    return new Array(pages).fill().map((_, idx) => idx + 1);\r\n  };\r\n\r\n  if (isFetching) {\r\n    return (\r\n      <div className=\"pagination-posts\">\r\n        <React.Fragment>\r\n          <SkeletonPost />\r\n          <SkeletonPost />\r\n          <SkeletonPost />\r\n          <SkeletonPost />\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pagination-group mb-1\">\r\n        {data.length ? (\r\n          <PaginationGroup className=\"ms-0 mb-0\">\r\n            <PaginationGroup.Prev\r\n              disabled={currentPage === 1}\r\n              onClick={() => goBack()}\r\n            />\r\n            {paginationGroup().map((number, index) => (\r\n              <PaginationGroup.Item\r\n                key={index}\r\n                active={number === currentPage}\r\n                onClick={() => changePage(number)}\r\n              >\r\n                {number}\r\n              </PaginationGroup.Item>\r\n            ))}\r\n            <PaginationGroup.Next\r\n              disabled={currentPage === pages}\r\n              onClick={() => goNext()}\r\n            />\r\n          </PaginationGroup>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"pagination-posts\">\r\n        {data.length\r\n          ? sliceData().map((post, index) => (\r\n              <Post\r\n                key={index}\r\n                title={post.title}\r\n                desc={post.message}\r\n                isPostLiked={post.isLiked}\r\n                image={post.selectedFile}\r\n                creator={post.creator}\r\n                id={post._id}\r\n                setCurrentId={setCurrentId}\r\n                tags={post.tags}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    } catch (error) {\r\n      console.log(console.error());\r\n    }\r\n  });\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport { toBase64 } from \"../utils\";\r\n\r\nimport Tag from \"./Tag\";\r\n\r\nimport \"./ImageDropZone.scss\";\r\n\r\nconst ImageDropZone = ({setFormData, currentPost}) => {\r\n  const [image, setImage] = React.useState(currentPost ? currentPost.selectedFile : null);\r\n  const [points, setPoints] = React.useState(currentPost ? currentPost.tags : []);\r\n  const fileUploadRef = React.useRef(null);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach(async (file) => {\r\n      const tempBase64 = await toBase64(file);\r\n      setImage(tempBase64);\r\n      setFormData((prev) => ({...prev, selectedFile: tempBase64}))\r\n    });\r\n  }, [setFormData]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleAddTag = (e) => {\r\n    if (e.target.id === \"image\") {\r\n      var rect = e.target.getBoundingClientRect();\r\n      var x = e.clientX - rect.left + 20; //Adjustment for padding\r\n      var y = e.clientY - rect.top + 5; //Adjustment for padding\r\n\r\n      if (points.length < 9) {\r\n        let pointsTemp = [...points, {x,y}]\r\n        setPoints(pointsTemp);\r\n        setFormData((prev) => ({...prev, tags: pointsTemp}))\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} ref={fileUploadRef} accept=\"image/*\" />\r\n      </div>\r\n      <div className=\"image_form\">\r\n        <div className={`image_container ${image && \"uploaded\"}`}>\r\n          {image && (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  backgroundImage: `url(${image})`,\r\n                  backgroundSize: \"cover\",\r\n                  backgroundPosition: \"center center\",\r\n                }}\r\n                className=\"image\"\r\n                onClick={(e) => handleAddTag(e)}\r\n                id=\"image\"\r\n              >\r\n                {points.map((point, index) => (\r\n                  <Tag key={index} x={point.x} y={point.y} number={index + 1} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <p className=\"text-muted mb-2\">\r\n          <span className=\"h5\">Note: </span> Click anywhere on the image to add\r\n          a tag.\r\n        </p>\r\n        <div\r\n          className=\"custom_button\"\r\n          onClick={() => fileUploadRef.current.click()}\r\n        >\r\n          {isDragActive ? (\r\n            <p>Drop the files here ...</p>\r\n          ) : (\r\n            <p className=\"mb-0\">\r\n              Drop your image here, or{\" \"}\r\n              <span className=\"browse-text\">browse</span>\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageDropZone;\r\n","import React from \"react\";\r\nimport { Form, Button, Spinner, ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { createPost, updatePost } from \"../actions/postsActions\";\r\n\r\nimport ImageDropZone from \"./ImageDropZone\";\r\n\r\nconst initialFormState = {\r\n  creator: \"Surya K\",\r\n  message: \"\",\r\n  title: \"\",\r\n  selectedFile: \"\",\r\n  tags: [],\r\n};\r\n\r\nconst initialFormInValid = {\r\n  title: false,\r\n  message: false,\r\n};\r\n\r\nconst FormMain = ({ currentPost, setCurrentId }) => {\r\n  const isCreatingPost = useSelector((state) => state.posts.isCreatingPost);\r\n  const isUpdatingPost = useSelector((state) => state.posts.isUpdatingPost);\r\n\r\n  const [formData, setFormData] = React.useState(initialFormState);\r\n  const [formInValidity, setFormInValidity] =\r\n    React.useState(initialFormInValid);\r\n  const [currentForm, setCurrentForm] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setFormData({\r\n      ...initialFormState,\r\n      message: currentPost ? currentPost.message : \"\",\r\n      title: currentPost ? currentPost.title : \"\",\r\n      selectedFile: currentPost ? currentPost.selectedFile : \"\",\r\n      tags: currentPost ? currentPost.tags : [],\r\n    });\r\n  }, [currentPost]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(createPost(formData));\r\n    clear();\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(updatePost(currentPost._id, formData));\r\n    clear();\r\n  };\r\n\r\n  const handleNextForm = () => {\r\n    if (!formData.title.length) {\r\n      setFormInValidity((prev) => ({ ...prev, title: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, title: false }));\r\n    }\r\n\r\n    if (!formData.message.length) {\r\n      setFormInValidity((prev) => ({ ...prev, message: true }));\r\n    } else {\r\n      setFormInValidity((prev) => ({ ...prev, message: false }));\r\n    }\r\n\r\n    if (!formInValidity.title && !formInValidity.message) {\r\n      setCurrentForm(1);\r\n    }\r\n  };\r\n\r\n  const clear = () => {\r\n    setFormData(initialFormState);\r\n    setFormInValidity(initialFormInValid);\r\n    setCurrentId(null)\r\n    setTimeout(() => {\r\n      setCurrentForm(0);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      {currentForm === 0 && (\r\n        <div>\r\n          <h3 className=\"mb-3\">\r\n            {currentPost ? \"Edit a post\" : \"Create a post!\"}\r\n          </h3>\r\n          <Form.Group className=\"mb-3\" controlId=\"formTitle\">\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) =>\r\n                setFormData((prev) => ({ ...prev, title: e.target.value }))\r\n              }\r\n              isInvalid={formInValidity.title}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Eyecatching title for your post!\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formMessage\">\r\n            <Form.Label>Message</Form.Label>\r\n            <Form.Control\r\n              style={{ resize: \"none\" }}\r\n              as=\"textarea\"\r\n              rows={5}\r\n              value={formData.message}\r\n              onChange={(e) =>\r\n                setFormData((prev) => ({ ...prev, message: e.target.value }))\r\n              }\r\n              isInvalid={formInValidity.message}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Describe your awesome experience.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <ButtonGroup>\r\n            {currentPost ? (\r\n              <Button\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n                className=\"me-2\"\r\n                onClick={() => setCurrentId(null)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            ) : null}\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              className=\"\"\r\n              onClick={() => handleNextForm()}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      )}\r\n      {currentForm === 1 && (\r\n        <div className=\"d-flex flex-column justify-content-end\">\r\n          <h3 className=\"mb-4\">\r\n            {currentPost\r\n              ? \"Update your image and tags\"\r\n              : \"Add an image! (and some tags?)\"}\r\n          </h3>\r\n          <ImageDropZone setFormData={setFormData} currentPost={currentPost} />\r\n          <ButtonGroup>\r\n            <Button\r\n              variant=\"secondary\"\r\n              type=\"button\"\r\n              onClick={() => setCurrentForm(0)}\r\n              className=\"me-2\"\r\n            >\r\n              Back\r\n            </Button>\r\n\r\n            {currentPost ? (\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={() => handleUpdate()}\r\n                disabled={isUpdatingPost}\r\n              >\r\n                {isUpdatingPost ? (\r\n                  <React.Fragment>\r\n                    <Spinner animation=\"border\" variant=\"light\" size=\"sm\" />{\" \"}\r\n                    Updating...\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"Update\"\r\n                )}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={() => handleSubmit()}\r\n                disabled={isCreatingPost}\r\n              >\r\n                {isCreatingPost ? (\r\n                  <React.Fragment>\r\n                    <Spinner animation=\"border\" variant=\"light\" size=\"sm\" />{\" \"}\r\n                    Posting...\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </Button>\r\n            )}\r\n          </ButtonGroup>\r\n        </div>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormMain;\r\n","import React from \"react\";\r\n\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postsActions\";\r\n\r\nimport Pagination from \"../components/Pagination\";\r\nimport FormMain from \"../components/FormMain\";\r\n\r\nconst HomePage = () => {\r\n  const [currentId, setCurrentId] = React.useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const currentPost = useSelector((state) =>\r\n    state.posts.posts.find((post) => post._id === currentId)\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"home-page row align-items-center justify-content-between\">\r\n        <div className=\"col-auto\">\r\n          <Pagination\r\n            data={posts}\r\n            pageLimit={3}\r\n            dataLimit={4}\r\n            setCurrentId={setCurrentId}\r\n          />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <FormMain currentPost={currentPost} setCurrentId={setCurrentId} />\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport ProtectedRoute from \"./layouts/ProtectedRoute\";\r\n\r\nimport IndexPage from \"./pages\";\r\nimport SignUpPage from \"./pages/signup\";\r\nimport HomePage from \"./pages/home\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <ProtectedRoute path=\"/home\" component={HomePage}></ProtectedRoute>\r\n        <Route path=\"/signup\" component={SignUpPage}></Route>\r\n        <Route path=\"/\" component={IndexPage}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport { store, persistor } from \"./store\";\r\n\r\nimport App from \"./App\";\r\nimport Toast from \"./components/Toast\";\r\n\r\nimport \"./assets/scss/styles.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <Toast />\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}